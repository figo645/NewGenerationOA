package cn.edu.ken.mybatis.model;

import java.util.ArrayList;
import java.util.List;

public class ContactExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table contact
     *
     * @mbggenerated Tue Sep 22 14:56:15 CST 2015
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table contact
     *
     * @mbggenerated Tue Sep 22 14:56:15 CST 2015
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table contact
     *
     * @mbggenerated Tue Sep 22 14:56:15 CST 2015
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table contact
     *
     * @mbggenerated Tue Sep 22 14:56:15 CST 2015
     */
    public ContactExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table contact
     *
     * @mbggenerated Tue Sep 22 14:56:15 CST 2015
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table contact
     *
     * @mbggenerated Tue Sep 22 14:56:15 CST 2015
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table contact
     *
     * @mbggenerated Tue Sep 22 14:56:15 CST 2015
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table contact
     *
     * @mbggenerated Tue Sep 22 14:56:15 CST 2015
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table contact
     *
     * @mbggenerated Tue Sep 22 14:56:15 CST 2015
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table contact
     *
     * @mbggenerated Tue Sep 22 14:56:15 CST 2015
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table contact
     *
     * @mbggenerated Tue Sep 22 14:56:15 CST 2015
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table contact
     *
     * @mbggenerated Tue Sep 22 14:56:15 CST 2015
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table contact
     *
     * @mbggenerated Tue Sep 22 14:56:15 CST 2015
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table contact
     *
     * @mbggenerated Tue Sep 22 14:56:15 CST 2015
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table contact
     *
     * @mbggenerated Tue Sep 22 14:56:15 CST 2015
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdcontactIsNull() {
            addCriterion("idcontact is null");
            return (Criteria) this;
        }

        public Criteria andIdcontactIsNotNull() {
            addCriterion("idcontact is not null");
            return (Criteria) this;
        }

        public Criteria andIdcontactEqualTo(Integer value) {
            addCriterion("idcontact =", value, "idcontact");
            return (Criteria) this;
        }

        public Criteria andIdcontactNotEqualTo(Integer value) {
            addCriterion("idcontact <>", value, "idcontact");
            return (Criteria) this;
        }

        public Criteria andIdcontactGreaterThan(Integer value) {
            addCriterion("idcontact >", value, "idcontact");
            return (Criteria) this;
        }

        public Criteria andIdcontactGreaterThanOrEqualTo(Integer value) {
            addCriterion("idcontact >=", value, "idcontact");
            return (Criteria) this;
        }

        public Criteria andIdcontactLessThan(Integer value) {
            addCriterion("idcontact <", value, "idcontact");
            return (Criteria) this;
        }

        public Criteria andIdcontactLessThanOrEqualTo(Integer value) {
            addCriterion("idcontact <=", value, "idcontact");
            return (Criteria) this;
        }

        public Criteria andIdcontactIn(List<Integer> values) {
            addCriterion("idcontact in", values, "idcontact");
            return (Criteria) this;
        }

        public Criteria andIdcontactNotIn(List<Integer> values) {
            addCriterion("idcontact not in", values, "idcontact");
            return (Criteria) this;
        }

        public Criteria andIdcontactBetween(Integer value1, Integer value2) {
            addCriterion("idcontact between", value1, value2, "idcontact");
            return (Criteria) this;
        }

        public Criteria andIdcontactNotBetween(Integer value1, Integer value2) {
            addCriterion("idcontact not between", value1, value2, "idcontact");
            return (Criteria) this;
        }

        public Criteria andContacttypeIdcontacttypeIsNull() {
            addCriterion("contacttype_idcontacttype is null");
            return (Criteria) this;
        }

        public Criteria andContacttypeIdcontacttypeIsNotNull() {
            addCriterion("contacttype_idcontacttype is not null");
            return (Criteria) this;
        }

        public Criteria andContacttypeIdcontacttypeEqualTo(Integer value) {
            addCriterion("contacttype_idcontacttype =", value, "contacttypeIdcontacttype");
            return (Criteria) this;
        }

        public Criteria andContacttypeIdcontacttypeNotEqualTo(Integer value) {
            addCriterion("contacttype_idcontacttype <>", value, "contacttypeIdcontacttype");
            return (Criteria) this;
        }

        public Criteria andContacttypeIdcontacttypeGreaterThan(Integer value) {
            addCriterion("contacttype_idcontacttype >", value, "contacttypeIdcontacttype");
            return (Criteria) this;
        }

        public Criteria andContacttypeIdcontacttypeGreaterThanOrEqualTo(Integer value) {
            addCriterion("contacttype_idcontacttype >=", value, "contacttypeIdcontacttype");
            return (Criteria) this;
        }

        public Criteria andContacttypeIdcontacttypeLessThan(Integer value) {
            addCriterion("contacttype_idcontacttype <", value, "contacttypeIdcontacttype");
            return (Criteria) this;
        }

        public Criteria andContacttypeIdcontacttypeLessThanOrEqualTo(Integer value) {
            addCriterion("contacttype_idcontacttype <=", value, "contacttypeIdcontacttype");
            return (Criteria) this;
        }

        public Criteria andContacttypeIdcontacttypeIn(List<Integer> values) {
            addCriterion("contacttype_idcontacttype in", values, "contacttypeIdcontacttype");
            return (Criteria) this;
        }

        public Criteria andContacttypeIdcontacttypeNotIn(List<Integer> values) {
            addCriterion("contacttype_idcontacttype not in", values, "contacttypeIdcontacttype");
            return (Criteria) this;
        }

        public Criteria andContacttypeIdcontacttypeBetween(Integer value1, Integer value2) {
            addCriterion("contacttype_idcontacttype between", value1, value2, "contacttypeIdcontacttype");
            return (Criteria) this;
        }

        public Criteria andContacttypeIdcontacttypeNotBetween(Integer value1, Integer value2) {
            addCriterion("contacttype_idcontacttype not between", value1, value2, "contacttypeIdcontacttype");
            return (Criteria) this;
        }

        public Criteria andUsernameIsNull() {
            addCriterion("username is null");
            return (Criteria) this;
        }

        public Criteria andUsernameIsNotNull() {
            addCriterion("username is not null");
            return (Criteria) this;
        }

        public Criteria andUsernameEqualTo(String value) {
            addCriterion("username =", value, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameNotEqualTo(String value) {
            addCriterion("username <>", value, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameGreaterThan(String value) {
            addCriterion("username >", value, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameGreaterThanOrEqualTo(String value) {
            addCriterion("username >=", value, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameLessThan(String value) {
            addCriterion("username <", value, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameLessThanOrEqualTo(String value) {
            addCriterion("username <=", value, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameLike(String value) {
            addCriterion("username like", value, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameNotLike(String value) {
            addCriterion("username not like", value, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameIn(List<String> values) {
            addCriterion("username in", values, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameNotIn(List<String> values) {
            addCriterion("username not in", values, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameBetween(String value1, String value2) {
            addCriterion("username between", value1, value2, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameNotBetween(String value1, String value2) {
            addCriterion("username not between", value1, value2, "username");
            return (Criteria) this;
        }

        public Criteria andPasswordIsNull() {
            addCriterion("password is null");
            return (Criteria) this;
        }

        public Criteria andPasswordIsNotNull() {
            addCriterion("password is not null");
            return (Criteria) this;
        }

        public Criteria andPasswordEqualTo(String value) {
            addCriterion("password =", value, "password");
            return (Criteria) this;
        }

        public Criteria andPasswordNotEqualTo(String value) {
            addCriterion("password <>", value, "password");
            return (Criteria) this;
        }

        public Criteria andPasswordGreaterThan(String value) {
            addCriterion("password >", value, "password");
            return (Criteria) this;
        }

        public Criteria andPasswordGreaterThanOrEqualTo(String value) {
            addCriterion("password >=", value, "password");
            return (Criteria) this;
        }

        public Criteria andPasswordLessThan(String value) {
            addCriterion("password <", value, "password");
            return (Criteria) this;
        }

        public Criteria andPasswordLessThanOrEqualTo(String value) {
            addCriterion("password <=", value, "password");
            return (Criteria) this;
        }

        public Criteria andPasswordLike(String value) {
            addCriterion("password like", value, "password");
            return (Criteria) this;
        }

        public Criteria andPasswordNotLike(String value) {
            addCriterion("password not like", value, "password");
            return (Criteria) this;
        }

        public Criteria andPasswordIn(List<String> values) {
            addCriterion("password in", values, "password");
            return (Criteria) this;
        }

        public Criteria andPasswordNotIn(List<String> values) {
            addCriterion("password not in", values, "password");
            return (Criteria) this;
        }

        public Criteria andPasswordBetween(String value1, String value2) {
            addCriterion("password between", value1, value2, "password");
            return (Criteria) this;
        }

        public Criteria andPasswordNotBetween(String value1, String value2) {
            addCriterion("password not between", value1, value2, "password");
            return (Criteria) this;
        }

        public Criteria andUserlocaleIsNull() {
            addCriterion("userlocale is null");
            return (Criteria) this;
        }

        public Criteria andUserlocaleIsNotNull() {
            addCriterion("userlocale is not null");
            return (Criteria) this;
        }

        public Criteria andUserlocaleEqualTo(String value) {
            addCriterion("userlocale =", value, "userlocale");
            return (Criteria) this;
        }

        public Criteria andUserlocaleNotEqualTo(String value) {
            addCriterion("userlocale <>", value, "userlocale");
            return (Criteria) this;
        }

        public Criteria andUserlocaleGreaterThan(String value) {
            addCriterion("userlocale >", value, "userlocale");
            return (Criteria) this;
        }

        public Criteria andUserlocaleGreaterThanOrEqualTo(String value) {
            addCriterion("userlocale >=", value, "userlocale");
            return (Criteria) this;
        }

        public Criteria andUserlocaleLessThan(String value) {
            addCriterion("userlocale <", value, "userlocale");
            return (Criteria) this;
        }

        public Criteria andUserlocaleLessThanOrEqualTo(String value) {
            addCriterion("userlocale <=", value, "userlocale");
            return (Criteria) this;
        }

        public Criteria andUserlocaleLike(String value) {
            addCriterion("userlocale like", value, "userlocale");
            return (Criteria) this;
        }

        public Criteria andUserlocaleNotLike(String value) {
            addCriterion("userlocale not like", value, "userlocale");
            return (Criteria) this;
        }

        public Criteria andUserlocaleIn(List<String> values) {
            addCriterion("userlocale in", values, "userlocale");
            return (Criteria) this;
        }

        public Criteria andUserlocaleNotIn(List<String> values) {
            addCriterion("userlocale not in", values, "userlocale");
            return (Criteria) this;
        }

        public Criteria andUserlocaleBetween(String value1, String value2) {
            addCriterion("userlocale between", value1, value2, "userlocale");
            return (Criteria) this;
        }

        public Criteria andUserlocaleNotBetween(String value1, String value2) {
            addCriterion("userlocale not between", value1, value2, "userlocale");
            return (Criteria) this;
        }

        public Criteria andUsersettingIsNull() {
            addCriterion("usersetting is null");
            return (Criteria) this;
        }

        public Criteria andUsersettingIsNotNull() {
            addCriterion("usersetting is not null");
            return (Criteria) this;
        }

        public Criteria andUsersettingEqualTo(String value) {
            addCriterion("usersetting =", value, "usersetting");
            return (Criteria) this;
        }

        public Criteria andUsersettingNotEqualTo(String value) {
            addCriterion("usersetting <>", value, "usersetting");
            return (Criteria) this;
        }

        public Criteria andUsersettingGreaterThan(String value) {
            addCriterion("usersetting >", value, "usersetting");
            return (Criteria) this;
        }

        public Criteria andUsersettingGreaterThanOrEqualTo(String value) {
            addCriterion("usersetting >=", value, "usersetting");
            return (Criteria) this;
        }

        public Criteria andUsersettingLessThan(String value) {
            addCriterion("usersetting <", value, "usersetting");
            return (Criteria) this;
        }

        public Criteria andUsersettingLessThanOrEqualTo(String value) {
            addCriterion("usersetting <=", value, "usersetting");
            return (Criteria) this;
        }

        public Criteria andUsersettingLike(String value) {
            addCriterion("usersetting like", value, "usersetting");
            return (Criteria) this;
        }

        public Criteria andUsersettingNotLike(String value) {
            addCriterion("usersetting not like", value, "usersetting");
            return (Criteria) this;
        }

        public Criteria andUsersettingIn(List<String> values) {
            addCriterion("usersetting in", values, "usersetting");
            return (Criteria) this;
        }

        public Criteria andUsersettingNotIn(List<String> values) {
            addCriterion("usersetting not in", values, "usersetting");
            return (Criteria) this;
        }

        public Criteria andUsersettingBetween(String value1, String value2) {
            addCriterion("usersetting between", value1, value2, "usersetting");
            return (Criteria) this;
        }

        public Criteria andUsersettingNotBetween(String value1, String value2) {
            addCriterion("usersetting not between", value1, value2, "usersetting");
            return (Criteria) this;
        }

        public Criteria andRetiredIsNull() {
            addCriterion("retired is null");
            return (Criteria) this;
        }

        public Criteria andRetiredIsNotNull() {
            addCriterion("retired is not null");
            return (Criteria) this;
        }

        public Criteria andRetiredEqualTo(Boolean value) {
            addCriterion("retired =", value, "retired");
            return (Criteria) this;
        }

        public Criteria andRetiredNotEqualTo(Boolean value) {
            addCriterion("retired <>", value, "retired");
            return (Criteria) this;
        }

        public Criteria andRetiredGreaterThan(Boolean value) {
            addCriterion("retired >", value, "retired");
            return (Criteria) this;
        }

        public Criteria andRetiredGreaterThanOrEqualTo(Boolean value) {
            addCriterion("retired >=", value, "retired");
            return (Criteria) this;
        }

        public Criteria andRetiredLessThan(Boolean value) {
            addCriterion("retired <", value, "retired");
            return (Criteria) this;
        }

        public Criteria andRetiredLessThanOrEqualTo(Boolean value) {
            addCriterion("retired <=", value, "retired");
            return (Criteria) this;
        }

        public Criteria andRetiredIn(List<Boolean> values) {
            addCriterion("retired in", values, "retired");
            return (Criteria) this;
        }

        public Criteria andRetiredNotIn(List<Boolean> values) {
            addCriterion("retired not in", values, "retired");
            return (Criteria) this;
        }

        public Criteria andRetiredBetween(Boolean value1, Boolean value2) {
            addCriterion("retired between", value1, value2, "retired");
            return (Criteria) this;
        }

        public Criteria andRetiredNotBetween(Boolean value1, Boolean value2) {
            addCriterion("retired not between", value1, value2, "retired");
            return (Criteria) this;
        }

        public Criteria andDepartmentIddepartmentIsNull() {
            addCriterion("department_iddepartment is null");
            return (Criteria) this;
        }

        public Criteria andDepartmentIddepartmentIsNotNull() {
            addCriterion("department_iddepartment is not null");
            return (Criteria) this;
        }

        public Criteria andDepartmentIddepartmentEqualTo(Integer value) {
            addCriterion("department_iddepartment =", value, "departmentIddepartment");
            return (Criteria) this;
        }

        public Criteria andDepartmentIddepartmentNotEqualTo(Integer value) {
            addCriterion("department_iddepartment <>", value, "departmentIddepartment");
            return (Criteria) this;
        }

        public Criteria andDepartmentIddepartmentGreaterThan(Integer value) {
            addCriterion("department_iddepartment >", value, "departmentIddepartment");
            return (Criteria) this;
        }

        public Criteria andDepartmentIddepartmentGreaterThanOrEqualTo(Integer value) {
            addCriterion("department_iddepartment >=", value, "departmentIddepartment");
            return (Criteria) this;
        }

        public Criteria andDepartmentIddepartmentLessThan(Integer value) {
            addCriterion("department_iddepartment <", value, "departmentIddepartment");
            return (Criteria) this;
        }

        public Criteria andDepartmentIddepartmentLessThanOrEqualTo(Integer value) {
            addCriterion("department_iddepartment <=", value, "departmentIddepartment");
            return (Criteria) this;
        }

        public Criteria andDepartmentIddepartmentIn(List<Integer> values) {
            addCriterion("department_iddepartment in", values, "departmentIddepartment");
            return (Criteria) this;
        }

        public Criteria andDepartmentIddepartmentNotIn(List<Integer> values) {
            addCriterion("department_iddepartment not in", values, "departmentIddepartment");
            return (Criteria) this;
        }

        public Criteria andDepartmentIddepartmentBetween(Integer value1, Integer value2) {
            addCriterion("department_iddepartment between", value1, value2, "departmentIddepartment");
            return (Criteria) this;
        }

        public Criteria andDepartmentIddepartmentNotBetween(Integer value1, Integer value2) {
            addCriterion("department_iddepartment not between", value1, value2, "departmentIddepartment");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table contact
     *
     * @mbggenerated do_not_delete_during_merge Tue Sep 22 14:56:15 CST 2015
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table contact
     *
     * @mbggenerated Tue Sep 22 14:56:15 CST 2015
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}