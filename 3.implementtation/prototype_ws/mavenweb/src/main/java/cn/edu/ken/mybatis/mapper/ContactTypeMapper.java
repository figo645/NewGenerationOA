package cn.edu.ken.mybatis.mapper;

import cn.edu.ken.mybatis.model.ContactType;
import cn.edu.ken.mybatis.model.ContactTypeExample;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface ContactTypeMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table contacttype
     *
     * @mbggenerated Tue Sep 22 11:29:48 CST 2015
     */
    @SelectProvider(type=ContactTypeSqlProvider.class, method="countByExample")
    int countByExample(ContactTypeExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table contacttype
     *
     * @mbggenerated Tue Sep 22 11:29:48 CST 2015
     */
    @DeleteProvider(type=ContactTypeSqlProvider.class, method="deleteByExample")
    int deleteByExample(ContactTypeExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table contacttype
     *
     * @mbggenerated Tue Sep 22 11:29:48 CST 2015
     */
    @Delete({
        "delete from contacttype",
        "where idcontacttype = #{idcontacttype,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer idcontacttype);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table contacttype
     *
     * @mbggenerated Tue Sep 22 11:29:48 CST 2015
     */
    @Insert({
        "insert into contacttype (idcontacttype, typecode, ",
        "typename, description, ",
        "priority, retired)",
        "values (#{idcontacttype,jdbcType=INTEGER}, #{typecode,jdbcType=VARCHAR}, ",
        "#{typename,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, ",
        "#{priority,jdbcType=TINYINT}, #{retired,jdbcType=BIT})"
    })
    int insert(ContactType record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table contacttype
     *
     * @mbggenerated Tue Sep 22 11:29:48 CST 2015
     */
    @InsertProvider(type=ContactTypeSqlProvider.class, method="insertSelective")
    int insertSelective(ContactType record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table contacttype
     *
     * @mbggenerated Tue Sep 22 11:29:48 CST 2015
     */
    @SelectProvider(type=ContactTypeSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="idcontacttype", property="idcontacttype", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="typecode", property="typecode", jdbcType=JdbcType.VARCHAR),
        @Result(column="typename", property="typename", jdbcType=JdbcType.VARCHAR),
        @Result(column="description", property="description", jdbcType=JdbcType.VARCHAR),
        @Result(column="priority", property="priority", jdbcType=JdbcType.TINYINT),
        @Result(column="retired", property="retired", jdbcType=JdbcType.BIT)
    })
    List<ContactType> selectByExample(ContactTypeExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table contacttype
     *
     * @mbggenerated Tue Sep 22 11:29:48 CST 2015
     */
    @Select({
        "select",
        "idcontacttype, typecode, typename, description, priority, retired",
        "from contacttype",
        "where idcontacttype = #{idcontacttype,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="idcontacttype", property="idcontacttype", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="typecode", property="typecode", jdbcType=JdbcType.VARCHAR),
        @Result(column="typename", property="typename", jdbcType=JdbcType.VARCHAR),
        @Result(column="description", property="description", jdbcType=JdbcType.VARCHAR),
        @Result(column="priority", property="priority", jdbcType=JdbcType.TINYINT),
        @Result(column="retired", property="retired", jdbcType=JdbcType.BIT)
    })
    ContactType selectByPrimaryKey(Integer idcontacttype);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table contacttype
     *
     * @mbggenerated Tue Sep 22 11:29:48 CST 2015
     */
    @UpdateProvider(type=ContactTypeSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") ContactType record, @Param("example") ContactTypeExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table contacttype
     *
     * @mbggenerated Tue Sep 22 11:29:48 CST 2015
     */
    @UpdateProvider(type=ContactTypeSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") ContactType record, @Param("example") ContactTypeExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table contacttype
     *
     * @mbggenerated Tue Sep 22 11:29:48 CST 2015
     */
    @UpdateProvider(type=ContactTypeSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(ContactType record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table contacttype
     *
     * @mbggenerated Tue Sep 22 11:29:48 CST 2015
     */
    @Update({
        "update contacttype",
        "set typecode = #{typecode,jdbcType=VARCHAR},",
          "typename = #{typename,jdbcType=VARCHAR},",
          "description = #{description,jdbcType=VARCHAR},",
          "priority = #{priority,jdbcType=TINYINT},",
          "retired = #{retired,jdbcType=BIT}",
        "where idcontacttype = #{idcontacttype,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(ContactType record);
}