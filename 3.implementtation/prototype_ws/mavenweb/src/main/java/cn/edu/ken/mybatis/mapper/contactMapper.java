package cn.edu.ken.mybatis.mapper;

import cn.edu.ken.mybatis.model.Contact;
import cn.edu.ken.mybatis.model.ContactExample;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface ContactMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Contact
     *
     * @mbggenerated Sat Sep 19 10:06:54 CST 2015
     */
    @SelectProvider(type=ContactSqlProvider.class, method="countByExample")
    int countByExample(ContactExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Contact
     *
     * @mbggenerated Sat Sep 19 10:06:54 CST 2015
     */
    @DeleteProvider(type=ContactSqlProvider.class, method="deleteByExample")
    int deleteByExample(ContactExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Contact
     *
     * @mbggenerated Sat Sep 19 10:06:54 CST 2015
     */
    @Delete({
        "delete from Contact",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Contact
     *
     * @mbggenerated Sat Sep 19 10:06:54 CST 2015
     */
    @Insert({
        "insert into Contact (id, username, ",
        "password, age, firstname, ",
        "secondname, selfcontent)",
        "values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, ",
        "#{password,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER}, #{firstname,jdbcType=VARCHAR}, ",
        "#{secondname,jdbcType=VARCHAR}, #{selfcontent,jdbcType=VARCHAR})"
    })
    int insert(Contact record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Contact
     *
     * @mbggenerated Sat Sep 19 10:06:54 CST 2015
     */
    @InsertProvider(type=ContactSqlProvider.class, method="insertSelective")
    int insertSelective(Contact record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Contact
     *
     * @mbggenerated Sat Sep 19 10:06:54 CST 2015
     */
    @SelectProvider(type=ContactSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="username", property="username", jdbcType=JdbcType.VARCHAR),
        @Result(column="password", property="password", jdbcType=JdbcType.VARCHAR),
        @Result(column="age", property="age", jdbcType=JdbcType.INTEGER),
        @Result(column="firstname", property="firstname", jdbcType=JdbcType.VARCHAR),
        @Result(column="secondname", property="secondname", jdbcType=JdbcType.VARCHAR),
        @Result(column="selfcontent", property="selfcontent", jdbcType=JdbcType.VARCHAR)
    })
    List<Contact> selectByExample(ContactExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Contact
     *
     * @mbggenerated Sat Sep 19 10:06:54 CST 2015
     */
    @Select({
        "select",
        "id, username, password, age, firstname, secondname, selfcontent",
        "from Contact",
        "where id = #{id,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="username", property="username", jdbcType=JdbcType.VARCHAR),
        @Result(column="password", property="password", jdbcType=JdbcType.VARCHAR),
        @Result(column="age", property="age", jdbcType=JdbcType.INTEGER),
        @Result(column="firstname", property="firstname", jdbcType=JdbcType.VARCHAR),
        @Result(column="secondname", property="secondname", jdbcType=JdbcType.VARCHAR),
        @Result(column="selfcontent", property="selfcontent", jdbcType=JdbcType.VARCHAR)
    })
    Contact selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Contact
     *
     * @mbggenerated Sat Sep 19 10:06:54 CST 2015
     */
    @UpdateProvider(type=ContactSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") Contact record, @Param("example") ContactExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Contact
     *
     * @mbggenerated Sat Sep 19 10:06:54 CST 2015
     */
    @UpdateProvider(type=ContactSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") Contact record, @Param("example") ContactExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Contact
     *
     * @mbggenerated Sat Sep 19 10:06:54 CST 2015
     */
    @UpdateProvider(type=ContactSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(Contact record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Contact
     *
     * @mbggenerated Sat Sep 19 10:06:54 CST 2015
     */
    @Update({
        "update Contact",
        "set username = #{username,jdbcType=VARCHAR},",
          "password = #{password,jdbcType=VARCHAR},",
          "age = #{age,jdbcType=INTEGER},",
          "firstname = #{firstname,jdbcType=VARCHAR},",
          "secondname = #{secondname,jdbcType=VARCHAR},",
          "selfcontent = #{selfcontent,jdbcType=VARCHAR}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(Contact record);
}