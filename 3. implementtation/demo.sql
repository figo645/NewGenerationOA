-- MySQL Script generated by MySQL Workbench
-- Tue Sep 15 21:52:12 2015
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema ngoa
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `ngoa` ;

-- -----------------------------------------------------
-- Schema ngoa
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `ngoa` DEFAULT CHARACTER SET utf8 COLLATE utf8_bin ;
USE `ngoa` ;

-- -----------------------------------------------------
-- Table `ngoa`.`tasktype`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ngoa`.`tasktype` ;

CREATE TABLE IF NOT EXISTS `ngoa`.`tasktype` (
  `idtasktype` INT NOT NULL COMMENT '',
  PRIMARY KEY (`idtasktype`)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ngoa`.`task`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ngoa`.`task` ;

CREATE TABLE IF NOT EXISTS `ngoa`.`task` (
  `idtask` INT NOT NULL COMMENT '',
  `startdate` VARCHAR(45) NULL COMMENT '',
  `enddate` VARCHAR(45) NULL COMMENT '',
  `taskname` VARCHAR(45) NULL COMMENT '',
  `tasktype_idtasktype` INT NOT NULL COMMENT '',
  PRIMARY KEY (`idtask`)  COMMENT '',
  INDEX `fk_task_tasktype1_idx` (`tasktype_idtasktype` ASC)  COMMENT '',
  CONSTRAINT `fk_task_tasktype1`
    FOREIGN KEY (`tasktype_idtasktype`)
    REFERENCES `ngoa`.`tasktype` (`idtasktype`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ngoa`.`workcalendar`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ngoa`.`workcalendar` ;

CREATE TABLE IF NOT EXISTS `ngoa`.`workcalendar` (
  `idworkcalendar` INT NOT NULL COMMENT '',
  `task_idtask` INT NOT NULL COMMENT '',
  `taskdate` VARCHAR(45) NULL COMMENT '',
  `taskname` VARCHAR(45) NULL COMMENT '',
  PRIMARY KEY (`idworkcalendar`)  COMMENT '',
  INDEX `fk_workcalendar_task1_idx` (`task_idtask` ASC)  COMMENT '',
  CONSTRAINT `fk_workcalendar_task1`
    FOREIGN KEY (`task_idtask`)
    REFERENCES `ngoa`.`task` (`idtask`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ngoa`.`meetingstype`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ngoa`.`meetingstype` ;

CREATE TABLE IF NOT EXISTS `ngoa`.`meetingstype` (
  `idmeetingstype` INT NOT NULL COMMENT '',
  PRIMARY KEY (`idmeetingstype`)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ngoa`.`meetings`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ngoa`.`meetings` ;

CREATE TABLE IF NOT EXISTS `ngoa`.`meetings` (
  `idmeetings` INT NOT NULL COMMENT '',
  `workcalendar_idworkcalendar` INT NOT NULL COMMENT '',
  `meetingstype_idmeetingstype` INT NOT NULL COMMENT '',
  PRIMARY KEY (`idmeetings`)  COMMENT '',
  INDEX `fk_meetings_workcalendar1_idx` (`workcalendar_idworkcalendar` ASC)  COMMENT '',
  INDEX `fk_meetings_meetingstype1_idx` (`meetingstype_idmeetingstype` ASC)  COMMENT '',
  CONSTRAINT `fk_meetings_workcalendar1`
    FOREIGN KEY (`workcalendar_idworkcalendar`)
    REFERENCES `ngoa`.`workcalendar` (`idworkcalendar`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_meetings_meetingstype1`
    FOREIGN KEY (`meetingstype_idmeetingstype`)
    REFERENCES `ngoa`.`meetingstype` (`idmeetingstype`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ngoa`.`contacttype`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ngoa`.`contacttype` ;

CREATE TABLE IF NOT EXISTS `ngoa`.`contacttype` (
  `idcontacttype` INT NOT NULL COMMENT '',
  PRIMARY KEY (`idcontacttype`)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ngoa`.`contact`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ngoa`.`contact` ;

CREATE TABLE IF NOT EXISTS `ngoa`.`contact` (
  `idcontact` INT NOT NULL COMMENT '',
  `meetings_idmeetings` INT NOT NULL COMMENT '',
  `contacttype_idcontacttype` INT NOT NULL COMMENT '',
  PRIMARY KEY (`idcontact`)  COMMENT '',
  INDEX `fk_contact_meetings1_idx` (`meetings_idmeetings` ASC)  COMMENT '',
  INDEX `fk_contact_contacttype1_idx` (`contacttype_idcontacttype` ASC)  COMMENT '',
  CONSTRAINT `fk_contact_meetings1`
    FOREIGN KEY (`meetings_idmeetings`)
    REFERENCES `ngoa`.`meetings` (`idmeetings`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_contact_contacttype1`
    FOREIGN KEY (`contacttype_idcontacttype`)
    REFERENCES `ngoa`.`contacttype` (`idcontacttype`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ngoa`.`activitypattern`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ngoa`.`activitypattern` ;

CREATE TABLE IF NOT EXISTS `ngoa`.`activitypattern` (
  `idactivitypattern` INT NOT NULL COMMENT '',
  PRIMARY KEY (`idactivitypattern`)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ngoa`.`activitytype`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ngoa`.`activitytype` ;

CREATE TABLE IF NOT EXISTS `ngoa`.`activitytype` (
  `idactivitytype` INT NOT NULL COMMENT '',
  PRIMARY KEY (`idactivitytype`)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ngoa`.`activities`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ngoa`.`activities` ;

CREATE TABLE IF NOT EXISTS `ngoa`.`activities` (
  `idactivities` INT NOT NULL COMMENT '',
  `activitypattern_idactivitypattern` INT NOT NULL COMMENT '',
  `task_idtask` INT NOT NULL COMMENT '',
  `meetings_idmeetings` INT NOT NULL COMMENT '',
  `activitytype_idactivitytype` INT NOT NULL COMMENT '',
  PRIMARY KEY (`idactivities`)  COMMENT '',
  INDEX `fk_activities_activitypattern1_idx` (`activitypattern_idactivitypattern` ASC)  COMMENT '',
  INDEX `fk_activities_task1_idx` (`task_idtask` ASC)  COMMENT '',
  INDEX `fk_activities_meetings1_idx` (`meetings_idmeetings` ASC)  COMMENT '',
  INDEX `fk_activities_activitytype1_idx` (`activitytype_idactivitytype` ASC)  COMMENT '',
  CONSTRAINT `fk_activities_activitypattern1`
    FOREIGN KEY (`activitypattern_idactivitypattern`)
    REFERENCES `ngoa`.`activitypattern` (`idactivitypattern`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_activities_task1`
    FOREIGN KEY (`task_idtask`)
    REFERENCES `ngoa`.`task` (`idtask`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_activities_meetings1`
    FOREIGN KEY (`meetings_idmeetings`)
    REFERENCES `ngoa`.`meetings` (`idmeetings`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_activities_activitytype1`
    FOREIGN KEY (`activitytype_idactivitytype`)
    REFERENCES `ngoa`.`activitytype` (`idactivitytype`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ngoa`.`doctype`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ngoa`.`doctype` ;

CREATE TABLE IF NOT EXISTS `ngoa`.`doctype` (
  `iddoctype` INT NOT NULL COMMENT '',
  PRIMARY KEY (`iddoctype`)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ngoa`.`document`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ngoa`.`document` ;

CREATE TABLE IF NOT EXISTS `ngoa`.`document` (
  `iddocument` INT NOT NULL COMMENT '',
  `docname` VARCHAR(45) NULL COMMENT '',
  `doccontent` VARCHAR(45) NULL COMMENT '',
  `sendername` VARCHAR(45) NULL COMMENT '',
  `datetime` VARCHAR(45) NULL COMMENT '',
  `delflag` VARCHAR(45) NULL COMMENT '',
  `doctype_iddoctype` INT NOT NULL COMMENT '',
  PRIMARY KEY (`iddocument`)  COMMENT '',
  INDEX `fk_document_doctype1_idx` (`doctype_iddoctype` ASC)  COMMENT '',
  CONSTRAINT `fk_document_doctype1`
    FOREIGN KEY (`doctype_iddoctype`)
    REFERENCES `ngoa`.`doctype` (`iddoctype`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ngoa`.`notestype`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ngoa`.`notestype` ;

CREATE TABLE IF NOT EXISTS `ngoa`.`notestype` (
  `idnotestype` INT NOT NULL COMMENT '',
  PRIMARY KEY (`idnotestype`)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ngoa`.`notes`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ngoa`.`notes` ;

CREATE TABLE IF NOT EXISTS `ngoa`.`notes` (
  `idnotes` INT NOT NULL COMMENT '',
  `notecontent` VARCHAR(45) NULL COMMENT '',
  `notestype_idnotestype` INT NOT NULL COMMENT '',
  PRIMARY KEY (`idnotes`)  COMMENT '',
  INDEX `fk_notes_notestype1_idx` (`notestype_idnotestype` ASC)  COMMENT '',
  CONSTRAINT `fk_notes_notestype1`
    FOREIGN KEY (`notestype_idnotestype`)
    REFERENCES `ngoa`.`notestype` (`idnotestype`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ngoa`.`holiday`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ngoa`.`holiday` ;

CREATE TABLE IF NOT EXISTS `ngoa`.`holiday` (
  `idholiday` INT NOT NULL COMMENT '',
  PRIMARY KEY (`idholiday`)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ngoa`.`docnotes`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ngoa`.`docnotes` ;

CREATE TABLE IF NOT EXISTS `ngoa`.`docnotes` (
  `iddocnotes` INT NOT NULL COMMENT '',
  `notes_idnotes` INT NOT NULL COMMENT '',
  `document_iddocument` INT NOT NULL COMMENT '',
  `task_idtask` INT NOT NULL COMMENT '',
  `contact_idcontact` INT NOT NULL COMMENT '',
  PRIMARY KEY (`iddocnotes`)  COMMENT '',
  INDEX `fk_docnotes_notes_idx` (`notes_idnotes` ASC)  COMMENT '',
  INDEX `fk_docnotes_document1_idx` (`document_iddocument` ASC)  COMMENT '',
  INDEX `fk_docnotes_task1_idx` (`task_idtask` ASC)  COMMENT '',
  INDEX `fk_docnotes_contact1_idx` (`contact_idcontact` ASC)  COMMENT '',
  CONSTRAINT `fk_docnotes_notes`
    FOREIGN KEY (`notes_idnotes`)
    REFERENCES `ngoa`.`notes` (`idnotes`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_docnotes_document1`
    FOREIGN KEY (`document_iddocument`)
    REFERENCES `ngoa`.`document` (`iddocument`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_docnotes_task1`
    FOREIGN KEY (`task_idtask`)
    REFERENCES `ngoa`.`task` (`idtask`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_docnotes_contact1`
    FOREIGN KEY (`contact_idcontact`)
    REFERENCES `ngoa`.`contact` (`idcontact`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ngoa`.`taskmemo`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ngoa`.`taskmemo` ;

CREATE TABLE IF NOT EXISTS `ngoa`.`taskmemo` (
  `task_idtask` INT NOT NULL COMMENT '',
  `notes_idnotes` INT NOT NULL COMMENT '',
  `contact_idcontact` INT NOT NULL COMMENT '',
  INDEX `fk_taskmemo_task1_idx` (`task_idtask` ASC)  COMMENT '',
  INDEX `fk_taskmemo_notes1_idx` (`notes_idnotes` ASC)  COMMENT '',
  INDEX `fk_taskmemo_contact1_idx` (`contact_idcontact` ASC)  COMMENT '',
  CONSTRAINT `fk_taskmemo_task1`
    FOREIGN KEY (`task_idtask`)
    REFERENCES `ngoa`.`task` (`idtask`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_taskmemo_notes1`
    FOREIGN KEY (`notes_idnotes`)
    REFERENCES `ngoa`.`notes` (`idnotes`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_taskmemo_contact1`
    FOREIGN KEY (`contact_idcontact`)
    REFERENCES `ngoa`.`contact` (`idcontact`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ngoa`.`taskcontact`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ngoa`.`taskcontact` ;

CREATE TABLE IF NOT EXISTS `ngoa`.`taskcontact` (
  `idtaskcontact` INT NOT NULL COMMENT '',
  `contact_idcontact` INT NOT NULL COMMENT '',
  `task_idtask` INT NOT NULL COMMENT '',
  PRIMARY KEY (`idtaskcontact`)  COMMENT '',
  INDEX `fk_taskcontact_contact1_idx` (`contact_idcontact` ASC)  COMMENT '',
  INDEX `fk_taskcontact_task1_idx` (`task_idtask` ASC)  COMMENT '',
  CONSTRAINT `fk_taskcontact_contact1`
    FOREIGN KEY (`contact_idcontact`)
    REFERENCES `ngoa`.`contact` (`idcontact`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_taskcontact_task1`
    FOREIGN KEY (`task_idtask`)
    REFERENCES `ngoa`.`task` (`idtask`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
